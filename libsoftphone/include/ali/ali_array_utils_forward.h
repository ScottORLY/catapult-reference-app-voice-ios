#pragma once
#include "ali_integer.h"
#include "ali_wchar.h"

namespace ali
{

// ******************************************************************
struct is_internal_element_result;
// ******************************************************************

// ******************************************************************
struct is_internal_pointer_result;
// ******************************************************************

// ******************************************************************
template <typename T> class array_const_ref_common;
// ******************************************************************

// ******************************************************************
template <typename T> class array_const_ref;
// ******************************************************************

// ******************************************************************
template <> class array_const_ref<ali::uint8>;
// ******************************************************************

// ******************************************************************
typedef array_const_ref<ali::uint8> blob_const_ref;
// ******************************************************************

// ******************************************************************
template <> class array_const_ref<char>;
// ******************************************************************

// ******************************************************************
typedef array_const_ref<char> string_const_ref;
// ******************************************************************

// ******************************************************************
template <> class array_const_ref<ali::wchar>;
// ******************************************************************

// ******************************************************************
typedef array_const_ref<ali::wchar> wstring_const_ref;
// ******************************************************************

// ******************************************************************
template <typename T> class array_ref_common;
// ******************************************************************

// ******************************************************************
template <typename T> class array_ref;
// ******************************************************************

// ******************************************************************
template <> class array_ref<ali::uint8>;
// ******************************************************************

// ******************************************************************
typedef array_ref<ali::uint8> blob_ref;
// ******************************************************************

// ******************************************************************
template <> class array_ref<char>;
// ******************************************************************

// ******************************************************************
typedef array_ref<char> string_ref;
// ******************************************************************

// ******************************************************************
template <> class array_ref<ali::wchar>;
// ******************************************************************

// ******************************************************************
typedef array_ref<ali::wchar> wstring_ref;
// ******************************************************************

// ******************************************************************
class c_string_const_ref;
// ******************************************************************

// ******************************************************************
class string_literal;
// ******************************************************************

// ******************************************************************
class c_wstring_const_ref;
// ******************************************************************

// ******************************************************************
class wstring_literal;
// ******************************************************************

// ******************************************************************
template <typename T> class array_const_ptr;
// ******************************************************************

// ******************************************************************
typedef array_const_ptr<ali::uint8> blob_const_ptr;
// ******************************************************************

// ******************************************************************
template <> class array_const_ptr<char>;
// ******************************************************************

// ******************************************************************
typedef array_const_ptr<char> string_const_ptr;
// ******************************************************************

// ******************************************************************
template <> class array_const_ptr<ali::wchar>;
// ******************************************************************

// ******************************************************************
typedef array_const_ptr<ali::wchar> wstring_const_ptr;
// ******************************************************************

// ******************************************************************
template <typename T> class array_ptr;
// ******************************************************************

// ******************************************************************
typedef array_ptr<ali::uint8> blob_ptr;
// ******************************************************************

// ******************************************************************
typedef array_ptr<char> string_ptr;
// ******************************************************************

// ******************************************************************
typedef array_ptr<ali::wchar> wstring_ptr;
// ******************************************************************

// ******************************************************************
class c_string_const_ptr;
// ******************************************************************

// ******************************************************************
class c_wstring_const_ptr;
// ******************************************************************

}   //  namespace ali
